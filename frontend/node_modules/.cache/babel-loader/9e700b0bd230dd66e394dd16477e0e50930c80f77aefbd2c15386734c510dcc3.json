{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soury\\\\job-matching-platform\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../firebaseConfig\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n\n      // Assuming role is determined based on email (Modify this logic based on your database)\n      const role = user.email.includes(\"worker\") ? \"worker\" : \"user\";\n\n      // Save role in localStorage\n      localStorage.setItem(\"userRole\", role);\n\n      // Redirect based on role\n      navigate(\"/\");\n    } catch (error) {\n      console.error(\"Login failed:\", error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"rIjyA2uJXTJXGlQGcq/HSho2Mo8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","signInWithEmailAndPassword","auth","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","navigate","handleLogin","userCredential","user","role","includes","localStorage","setItem","error","console","message","children","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/soury/job-matching-platform/frontend/src/pages/Login.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth } from \"../firebaseConfig\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      const user = userCredential.user;\r\n\r\n      // Assuming role is determined based on email (Modify this logic based on your database)\r\n      const role = user.email.includes(\"worker\") ? \"worker\" : \"user\";\r\n\r\n      // Save role in localStorage\r\n      localStorage.setItem(\"userRole\", role);\r\n\r\n      // Redirect based on role\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"email\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\r\n      <button onClick={handleLogin}>Login</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,0BAA0B,QAAQ,eAAe;AAC1D,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMY,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,cAAc,GAAG,MAAMb,0BAA0B,CAACC,IAAI,EAAEM,KAAK,EAAEE,QAAQ,CAAC;MAC9E,MAAMK,IAAI,GAAGD,cAAc,CAACC,IAAI;;MAEhC;MACA,MAAMC,IAAI,GAAGD,IAAI,CAACP,KAAK,CAACS,QAAQ,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,MAAM;;MAE9D;MACAC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEH,IAAI,CAAC;;MAEtC;MACAJ,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC/C;EACF,CAAC;EAED,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAOmB,IAAI,EAAC,OAAO;MAACC,WAAW,EAAC,OAAO;MAACC,QAAQ,EAAGC,CAAC,IAAKlB,QAAQ,CAACkB,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrF5B,OAAA;MAAOmB,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,UAAU;MAACC,QAAQ,EAAGC,CAAC,IAAKhB,WAAW,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9F5B,OAAA;MAAQ6B,OAAO,EAAErB,WAAY;MAAAU,QAAA,EAAC;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA9BID,KAAK;EAAA,QAGQH,WAAW;AAAA;AAAAgC,EAAA,GAHxB7B,KAAK;AAgCX,eAAeA,KAAK;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}