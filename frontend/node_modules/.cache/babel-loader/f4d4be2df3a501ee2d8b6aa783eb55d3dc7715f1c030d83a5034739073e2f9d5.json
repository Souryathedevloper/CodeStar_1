{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soury\\\\job-matching-platform\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth, googleProvider } from \"../firebaseConfig\";\nimport { signInWithPopup, signInWithEmailAndPassword, RecaptchaVerifier, signInWithPhoneNumber } from \"firebase/auth\";\nimport \"../styles/Login.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [userType, setUserType] = useState(\"\"); // Track Worker/User selection\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [confirmationResult, setConfirmationResult] = useState(null);\n  const navigate = useNavigate();\n\n  // Handle Google Sign-In\n  const handleGoogleLogin = async () => {\n    try {\n      const result = await signInWithPopup(auth, googleProvider);\n      console.log(\"Google Sign-In Successful:\", result.user);\n      redirectToDashboard();\n    } catch (error) {\n      console.error(\"Google Sign-In Error:\", error);\n    }\n  };\n\n  // Handle Email & Password Login\n  const handleEmailLogin = async e => {\n    e.preventDefault();\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      redirectToDashboard();\n    } catch (error) {\n      console.error(\"Login Error:\", error);\n    }\n  };\n\n  // Handle Phone Login (Send OTP)\n  const sendOtp = async () => {\n    try {\n      const recaptcha = new RecaptchaVerifier(auth, \"recaptcha-container\", {\n        size: \"invisible\"\n      });\n      const confirmation = await signInWithPhoneNumber(auth, phone, recaptcha);\n      setConfirmationResult(confirmation);\n    } catch (error) {\n      console.error(\"OTP Send Error:\", error);\n    }\n  };\n\n  // Verify OTP\n  const verifyOtp = async () => {\n    try {\n      await confirmationResult.confirm(otp);\n      redirectToDashboard();\n    } catch (error) {\n      console.error(\"OTP Verification Error:\", error);\n    }\n  };\n\n  // Redirect Based on Role\n  const redirectToDashboard = () => {\n    if (userType === \"worker\") {\n      navigate(\"/worker-dashboard\");\n    } else {\n      navigate(\"/user-dashboard\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: !userType ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"role-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setUserType(\"user\"),\n        children: \"Login as User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setUserType(\"worker\"),\n        children: \"Login as Worker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login to Knock Nok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEmailLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGoogleLogin,\n        children: \"Sign in with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Phone Number\",\n        value: phone,\n        onChange: e => setPhone(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendOtp,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), confirmationResult && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter OTP\",\n          value: otp,\n          onChange: e => setOtp(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: verifyOtp,\n          children: \"Verify OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"recaptcha-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"H8c5Rmdl9n91blPV2LMyq+lobNM=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","auth","googleProvider","signInWithPopup","signInWithEmailAndPassword","RecaptchaVerifier","signInWithPhoneNumber","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","userType","setUserType","email","setEmail","password","setPassword","phone","setPhone","otp","setOtp","confirmationResult","setConfirmationResult","navigate","handleGoogleLogin","result","console","log","user","redirectToDashboard","error","handleEmailLogin","e","preventDefault","sendOtp","recaptcha","size","confirmation","verifyOtp","confirm","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","id","_c","$RefreshReg$"],"sources":["C:/Users/soury/job-matching-platform/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth, googleProvider } from \"../firebaseConfig\";\r\nimport { signInWithPopup, signInWithEmailAndPassword, RecaptchaVerifier, signInWithPhoneNumber } from \"firebase/auth\";\r\nimport \"../styles/Login.css\";\r\n\r\nconst Login = () => {\r\n  const [userType, setUserType] = useState(\"\"); // Track Worker/User selection\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [confirmationResult, setConfirmationResult] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Handle Google Sign-In\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n      const result = await signInWithPopup(auth, googleProvider);\r\n      console.log(\"Google Sign-In Successful:\", result.user);\r\n      redirectToDashboard();\r\n    } catch (error) {\r\n      console.error(\"Google Sign-In Error:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle Email & Password Login\r\n  const handleEmailLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      redirectToDashboard();\r\n    } catch (error) {\r\n      console.error(\"Login Error:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle Phone Login (Send OTP)\r\n  const sendOtp = async () => {\r\n    try {\r\n      const recaptcha = new RecaptchaVerifier(auth, \"recaptcha-container\", { size: \"invisible\" });\r\n      const confirmation = await signInWithPhoneNumber(auth, phone, recaptcha);\r\n      setConfirmationResult(confirmation);\r\n    } catch (error) {\r\n      console.error(\"OTP Send Error:\", error);\r\n    }\r\n  };\r\n\r\n  // Verify OTP\r\n  const verifyOtp = async () => {\r\n    try {\r\n      await confirmationResult.confirm(otp);\r\n      redirectToDashboard();\r\n    } catch (error) {\r\n      console.error(\"OTP Verification Error:\", error);\r\n    }\r\n  };\r\n\r\n  // Redirect Based on Role\r\n  const redirectToDashboard = () => {\r\n    if (userType === \"worker\") {\r\n      navigate(\"/worker-dashboard\");\r\n    } else {\r\n      navigate(\"/user-dashboard\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      {/* Role Selection */}\r\n      {!userType ? (\r\n        <div className=\"role-selection\">\r\n          <button onClick={() => setUserType(\"user\")}>Login as User</button>\r\n          <button onClick={() => setUserType(\"worker\")}>Login as Worker</button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"login-form\">\r\n          <h2>Login to Knock Nok</h2>\r\n          \r\n          {/* Email Login */}\r\n          <form onSubmit={handleEmailLogin}>\r\n            <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n            <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n            <button type=\"submit\">Login</button>\r\n          </form>\r\n\r\n          {/* Google Login */}\r\n          <button onClick={handleGoogleLogin}>Sign in with Google</button>\r\n\r\n          {/* Phone Number Login */}\r\n          <input type=\"text\" placeholder=\"Phone Number\" value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n          <button onClick={sendOtp}>Send OTP</button>\r\n          {confirmationResult && (\r\n            <>\r\n              <input type=\"text\" placeholder=\"Enter OTP\" value={otp} onChange={(e) => setOtp(e.target.value)} />\r\n              <button onClick={verifyOtp}>Verify OTP</button>\r\n            </>\r\n          )}\r\n          <div id=\"recaptcha-container\"></div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}